<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vkiNYyz9OTN05IjWBm6cmbfJEawEa5F3kiNB/9k=
</value>
  </data>
</root>